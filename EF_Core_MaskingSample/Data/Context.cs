// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.Common;
using ConsoleConfigurationLibrary.Models;
using EF_Core_MaskingSample.Interceptors;
using EF_Core_MaskingSample.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace EF_Core_MaskingSample.Data;

public partial class Context : DbContext
{
    public Context() { }

    public virtual DbSet<Person> Person { get; set; }

    /// <summary>
    /// Configures the database context options, the database provider and interceptors.
    /// </summary>
    /// <param name="optionsBuilder">
    /// An instance of <see cref="DbContextOptionsBuilder"/> used to configure the context.
    /// </param>
    /// <remarks>
    /// This method sets the database provider to SQL Server using a connection string retrieved
    /// from the configuration. Additionally, it adds a <see cref="SocialSecurityMaskingInterceptor"/>
    /// to mask social security numbers during materialization.
    ///
    /// Connection string is retrieved from the configuration file using the <see cref="Config.JsonRoot()"/> from
    /// NuGet package <a href="https://www.nuget.org/packages/ConsoleConfigurationLibrary">ConsoleConfigurationLibrary</a>.
    /// </remarks>
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder
            .UseSqlServer(Config.JsonRoot().GetSection(nameof(ConnectionStrings)).Get<ConnectionStrings>().MainConnection)
            .AddInterceptors(
                new SocialSecurityMaskingInterceptor(),
                new CreditCardMaskingInterceptor()
            );

    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Person>(entity =>
        {
            entity.Property(e => e.FirstName).IsRequired();
            entity.Property(e => e.LastName).IsRequired();
            entity.Property(e => e.SocialSecurity).IsRequired();
            entity.Property(e => e.CreditCard).IsRequired();

        });


        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}