
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace DualContextsApp.NorthModels;

public partial class Product : INotifyPropertyChanged
{
    private string _productName;
    private int? _supplierId;
    private int? _categoryId;
    private string _quantityPerUnit;
    private decimal? _unitPrice;
    private short? _unitsInStock;
    private short? _unitsOnOrder;
    private short? _reorderLevel;
    private bool _discontinued;
    private DateTime? _discontinuedDate;
    public int ProductId { get; set; }

    public string ProductName
    {
        get => _productName;
        set
        {
            if (value == _productName) return;
            _productName = value;
            OnPropertyChanged();
        }
    }

    public int? SupplierId
    {
        get => _supplierId;
        set
        {
            if (value == _supplierId) return;
            _supplierId = value;
            OnPropertyChanged();
        }
    }

    public int? CategoryId
    {
        get => _categoryId;
        set
        {
            if (value == _categoryId) return;
            _categoryId = value;
            OnPropertyChanged();
        }
    }

    public string QuantityPerUnit
    {
        get => _quantityPerUnit;
        set
        {
            if (value == _quantityPerUnit) return;
            _quantityPerUnit = value;
            OnPropertyChanged();
        }
    }

    public decimal? UnitPrice
    {
        get => _unitPrice;
        set
        {
            if (value == _unitPrice) return;
            _unitPrice = value;
            OnPropertyChanged();
        }
    }

    public short? UnitsInStock
    {
        get => _unitsInStock;
        set
        {
            if (value == _unitsInStock) return;
            _unitsInStock = value;
            OnPropertyChanged();
        }
    }

    public short? UnitsOnOrder
    {
        get => _unitsOnOrder;
        set
        {
            if (value == _unitsOnOrder) return;
            _unitsOnOrder = value;
            OnPropertyChanged();
        }
    }

    public short? ReorderLevel
    {
        get => _reorderLevel;
        set
        {
            if (value == _reorderLevel) return;
            _reorderLevel = value;
            OnPropertyChanged();
        }
    }

    public bool Discontinued
    {
        get => _discontinued;
        set
        {
            if (value == _discontinued) return;
            _discontinued = value;
            OnPropertyChanged();
        }
    }

    public DateTime? DiscontinuedDate
    {
        get => _discontinuedDate;
        set
        {
            if (Nullable.Equals(value, _discontinuedDate)) return;
            _discontinuedDate = value;
            OnPropertyChanged();
        }
    }

    public virtual Category Category { get; set; }

    public virtual ICollection<OrderDetail> OrderDetails { get; set; } = new List<OrderDetail>();

    public virtual Supplier Supplier { get; set; }
    public string SupperlierCompanyName => Supplier.CompanyName;

    public override string ToString() => ProductName;



    public event PropertyChangedEventHandler PropertyChanged;
    protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }

}