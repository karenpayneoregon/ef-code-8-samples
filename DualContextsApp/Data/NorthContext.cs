
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using DualContextsApp.NorthModels;
using EntityCoreFileLogger;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using static ConsoleConfigurationLibrary.Classes.AppConnections;
using Region = DualContextsApp.NorthModels.Region;

#nullable disable

namespace DualContextsApp.Data;

public partial class NorthContext : DbContext
{
    public NorthContext()
    {
    }

    public NorthContext(DbContextOptions<NorthContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Contact> Contacts { get; set; }

    public virtual DbSet<ContactDevice> ContactDevices { get; set; }

    public virtual DbSet<ContactType> ContactTypes { get; set; }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderDetail> OrderDetails { get; set; }

    public virtual DbSet<PhoneType> PhoneTypes { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<Region> Regions { get; set; }

    public virtual DbSet<Shipper> Shippers { get; set; }

    public virtual DbSet<Supplier> Suppliers { get; set; }

    public virtual DbSet<SupplierRegion> SupplierRegions { get; set; }

    public virtual DbSet<Territory> Territories { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder
            .UseSqlServer(Instance.SecondaryConnection)
            .EnableSensitiveDataLogging()
            .LogTo(new DbContextToFileLogger().Log, new[]
                {
                    DbLoggerCategory.Database.Command.Name
                },
                LogLevel.Information);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.CategoryConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.ContactConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.ContactDeviceConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.ContactTypeConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.CountryConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.CustomerConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.EmployeeConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.OrderConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.OrderDetailConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.PhoneTypeConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.ProductConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.RegionConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.ShipperConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.SupplierConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.SupplierRegionConfiguration());
        modelBuilder.ApplyConfiguration(new NorthWind2024StarterApp.Data.Configurations.TerritoryConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
