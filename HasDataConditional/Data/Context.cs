// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using HasDataConditional.Classes.Configuration;
using HasDataConditional.Models;
using Microsoft.EntityFrameworkCore;

namespace HasDataConditional.Data;

public partial class Context : DbContext
{
    public Context()
    {
    }

    public Context(DbContextOptions<Context> options)
        : base(options)
    {
    }

    public virtual DbSet<ContactDevices> ContactDevices { get; set; }

    public virtual DbSet<ContactType> ContactType { get; set; }

    public virtual DbSet<Contacts> Contacts { get; set; }

    public virtual DbSet<PhoneType> PhoneType { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(DataConnections.Instance.MainConnection);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ContactDevices>(entity =>
        {
            entity.HasOne(d => d.Contact).WithMany(p => p.ContactDevices)
                .HasForeignKey(d => d.ContactId)
                .HasConstraintName("FK_ContactDevices_Contacts1");

            entity.HasOne(d => d.PhoneTypeIdentifierNavigation).WithMany(p => p.ContactDevices)
                .HasForeignKey(d => d.PhoneTypeIdentifier)
                .HasConstraintName("FK_ContactDevices_PhoneType1");
        });

        modelBuilder.Entity<ContactType>(entity =>
        {
            entity.HasKey(e => e.ContactTypeIdentifier);
        });

        modelBuilder.Entity<Contacts>(entity =>
        {
            entity.HasKey(e => e.ContactId);

            entity.HasOne(d => d.ContactTypeIdentifierNavigation).WithMany(p => p.Contacts)
                .HasForeignKey(d => d.ContactTypeIdentifier)
                .HasConstraintName("FK_Contacts_ContactType");
        });

        modelBuilder.Entity<PhoneType>(entity =>
        {
            entity.HasKey(e => e.PhoneTypeIdenitfier);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}