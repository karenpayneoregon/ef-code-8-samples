// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DatabaseCheckedApp.Data.Configurations;
using DatabaseCheckedApp.Models;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using DatabaseCheckedApp.Classes.Configuration;
using Microsoft.EntityFrameworkCore.Diagnostics;

#nullable disable

namespace DatabaseCheckedApp.Data;

public partial class Context : DbContext
{
    public Context()
    {
    }

    public Context(DbContextOptions<Context> options)
        : base(options)
    {
    }

    public virtual DbSet<ContactType> ContactTypes { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Gender> Genders { get; set; }

    /// <summary>
    /// Configures the database context options, such as the database provider and logging behavior.
    /// </summary>
    /// <param name="optionsBuilder">
    /// An instance of <see cref="DbContextOptionsBuilder"/> used to configure the context.
    /// </param>
    /// <remarks>
    /// This method sets up the SQL Server database connection using the main connection string
    /// from <see cref="Classes.Configuration.DataConnections"/> and configures logging
    /// to write executed commands to a file using <see cref="Classes.Configuration.DbContextToFileLogger"/>.
    /// </remarks>
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(DataConnections.Instance.MainConnection)
            .LogTo(new DbContextToFileLogger().Log, [RelationalEventId.CommandExecuted]);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.ContactTypeConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CustomerConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
