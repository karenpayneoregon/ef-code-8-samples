// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using HasConversion_Bool_ColorApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using static ConfigurationLibrary.Classes.ConfigurationHelper;
using Color = System.Drawing.Color;


namespace HasConversion_Bool_ColorApp.Data;

public partial class Context : DbContext
{
    public Context(DbContextOptions<Context> options) : base(options) { }
    public Context() { }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(ConnectionString());
    public virtual DbSet<Person> People { get; set; }



    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {

        modelBuilder.Entity<Person>()
            .Property(person => person.IsFriend)
            .HasConversion(new BoolToStringConverter("No", "Yes"));

        modelBuilder.Entity<Person>()
            .Property(person => person.Color)
            .HasConversion(
                color => color.Name,
                value => Color.FromName(value));
        
        var dateTimeConverter = new ValueConverter<DateTime, DateTime>(
            datetime => datetime,
            dateTime => DateTime.SpecifyKind(dateTime, DateTimeKind.Utc));


        foreach (var entityType in modelBuilder.Model.GetEntityTypes())
        {
            foreach (var property in entityType.GetProperties())
            {
                if (property.ClrType == typeof(DateTime) || property.ClrType == typeof(DateTime?))
                {
                    property.SetValueConverter(dateTimeConverter);
                }
            }
        }

    }
    
    //partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}